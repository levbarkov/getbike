<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "source_message".
 *
 * @property int $id
 * @property string $category
 * @property string $message
 *
 * @property Message[] $messages
 */
class SourceMessage extends \yii\db\ActiveRecord
{
    public $languages;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'source_message';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['languages'], 'safe'],
            [['message'], 'string'],
            [['category'], 'string', 'max' => 32],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('admin/sourcemessage', 'ID'),
            'category' => Yii::t('admin/sourcemessage', 'Category'),
            'message' => Yii::t('admin/sourcemessage', 'Message'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMessages()
    {
        return $this->hasMany(Message::className(), ['id' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        if($insert){
                $language_list = Yii::$app->params['languages'];
                foreach ($language_list as $val){
                    $model = new Message();
                    $model->id = $this->id;
                    $model->language = $val;
                    $model->translation = $this->languages[$val] ? $this->languages[$val] : null;
                    $model->save();
                }
        }
    }
}
